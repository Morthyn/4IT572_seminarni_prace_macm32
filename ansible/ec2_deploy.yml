- name: Deploy to ec2
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Launch ec2 to instance
      ec2_instance:
        instance_type: t3.medium
        image_id: ami-07caf09b362be10b8
        region: us-east-1
        key_name: DevOps
        vpc_subnet_id: subnet-0268d5039cfcadf69
        tags:
          Name: Eshop Seminar Paper
        count: 1
        security_group: eshop
        network:
          assign_public_ip: yes
        wait: yes
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      register: ec2_instance_result

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2_instance_result.instances }}"

    - name: Wait for SSH connection
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 300
      loop: "{{ ec2_instance_result.instances }}"


- name: Configure EC2 instances
  hosts: launched
  connection: ssh
  become: yes

  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - git
          - docker
        state: latest
        update_cache: yes
    - service:
        name: docker
        state: started
        enabled: yes
    - name: Set proper rights for Docker service
      shell: usermod -a -G docker ec2-user

    - name: Fetch eshop from Git
      git:
        repo: 'https://github.com/Morthyn/4IT572_seminarni_prace_macm32.git'
        dest: ./app

    - name: Build eshop Docker image
      docker_image:
        build:
          path: ./app
        name: eshop
        tag: latest
        source: build

    - name: Run eshop Docker
      docker_container:
        name: eshop
        image: eshop
        state: started
        ports:
          - "80:3000"

    - name: Wait for eshop to run
      wait_for:
        port:
          80

- name: Cleanup old EC2 instances
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Gather facts about existing instances except the newly launched
      ec2_instance_info:
        region: us-east-1
        filters:
          "tag:Name": "Eshop Seminar Paper"
          "instance-state-name": "running"
          "tag:Deployment": "{{ ansible_date_time.iso8601 }}"
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      register: ec2_facts

    - name: Terminate old instances
      ec2_instance:
        state: absent
        region: us-east-1
        instance_ids: "{{ ec2_facts.instances | map(attribute='instance_id') | list }}"
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      when: ec2_facts.instances | length > 0